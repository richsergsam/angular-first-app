дальше надо сделать:
- добавить в пиццу её стоимость
- создать компонент, который содержит 2 кнопки + и -, а также кол-во, ну т.е. сначала 0, потом жмём на + становится 1 и так далее, при этом он через @Output() бросает событие об изменении, параметр события - кол-во (ну т.е. значение текущее)
- добавить этот компонент в Card
- сделать сервис, в котором будет хранится содержимое корзины, метод изменения кол-ва (параметры пицца + кол-во) и событие изменения корзины (параметры события содержимое корзины)
- добавить компонент-корзину, там будет название пиццы, кол-во, сумма (цена * на кол-во), также будет "Итого", т.е. сумма заказа
- сделать отображение корзины в компоненте с использованием сервиса (т.е. при добавлении/удалении пиццы компонент корзины должен сразу отображать изменения и пересчитывать суммы)


дальше нужно сделать:
- Компонента строки поиска, при изменении значения в нём, он через @Output возвращает значение, это значение через pipe (тут внимание, названия одинаковые, но здесь я имею ввиду pipe Observable в RxJS) будет между сервисом с пиццами и подписчиком (т.е. вьюхой) фильтровать по названию пиццы (тут может и не нужно, но часто именно так строится поиск в Angular, позволяя не затрагивать вьюху)
- добавить к пиццам состав
- сделать компонент, который содержит чекбоксы типа "без мяса", "не острая", "десертная" и также как поиск, при изменении любого чекбокса он через @Output возвращает состояние всех чекбоксов, а фильтруется через ещё один оператор в цепочке .pipe RxJS
- добавить роутинг (https://angular.io/guide/router) и сделать страницу заказа, переход на неё по кнопке "Заказать" в корзине, там должна быть также список пицц в заказе (тут следует разделить компонент-корзину на список пицц + враппер с кнопками заказать/очистить, чтобы можно было переиспользовать)
- на странице заказа должна быть "реактивная" форма (https://angular.io/guide/reactive-forms) с проверкой на обязательный поля (адрес, телефон), т.е. валидация (https://angular.io/guide/form-validation)


Давай дальше с роутингом доделаем:
1) добавить сущность Order, там номер заказа, состав (какие пиццы входят и кол-во, опять же пригодится внутренний компонент отображения корзины без кнопок Очистить и т.д.) и статус (enum): Принят, Готовится, Передан на доставку, Завершён
2) добавить сервис, который хранит заказы и при добавлении нового меняет каждую минуту на следующий статус
3) добавить роут заказа order/:orderNumber
4) добавить страницу заказа (на неё перекидывать после заказа)
5) сделать страницу всех заказов, вывести их списком, с содержимым и статусом
6) сделать переход на страницу заказа из списка заказов, но только на НЕ завершённые заказы
